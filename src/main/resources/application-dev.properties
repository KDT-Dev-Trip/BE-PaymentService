# Development Environment Configuration
spring.application.name=payment-service
server.port=8081

# Eureka Client Configuration
eureka.client.service-url.defaultZone=${EUREKA_DEFAULT_ZONE:http://localhost:8761/eureka/}
eureka.instance.prefer-ip-address=true

# PostgreSQL Database Configuration (for Docker)
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/payment_db_dev}
spring.datasource.username=${DB_USERNAME:dev_user}
spring.datasource.password=${DB_PASSWORD:dev_pass}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration for PostgreSQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul

# TossPayments Configuration
toss.payments.secret.key=${TOSS_PAYMENTS_SECRET_KEY}
toss.payments.client.key=${TOSS_PAYMENTS_CLIENT_KEY}
toss.payments.api.url=https://api.tosspayments.com

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=payment-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Kafka Topics
kafka.topic.payment-events=payment-events
kafka.topic.subscription-events=subscription-events
kafka.topic.user-events=user-events
kafka.topic.mission-events=mission-events

# Logging
logging.level.ac.su.kdt.bepaymentservice=DEBUG
logging.level.org.springframework.kafka=INFO

# Management endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true